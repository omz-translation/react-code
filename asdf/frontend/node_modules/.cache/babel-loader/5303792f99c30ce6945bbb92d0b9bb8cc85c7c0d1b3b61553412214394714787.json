{"ast":null,"code":"var _jsxFileName = \"/Users/kimminsu/Documents/GitHub/react-code/frontend/src/pages/Frame111.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./Frame111.module.css\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Frame111 = () => {\n  _s();\n  const navigate = useNavigate();\n  const [wordData, setWordData] = useState(null);\n  useEffect(() => {\n    // Load data from Combined_MZ_Words.xlsx\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"Combined_MZ_Words.xlsx\");\n        const arrayBuffer = await response.arrayBuffer();\n        const data = new Uint8Array(arrayBuffer);\n        const workbook = XLSX.read(data, {\n          type: \"array\"\n        });\n\n        // Assuming your data is in the first sheet\n        const sheetName = workbook.SheetNames[0];\n        const sheet = workbook.Sheets[sheetName];\n\n        // Convert the sheet data to JSON\n        const jsonData = XLSX.utils.sheet_to_json(sheet);\n        setWordData(jsonData);\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const onRegisButtonContainerClick = useCallback(() => {\n    navigate(\"/8\");\n  }, [navigate]);\n  const onMZTextClick = useCallback(() => {\n    navigate(\"/\");\n  }, [navigate]);\n  const onMZText1Click = useCallback(() => {\n    navigate(\"/\");\n  }, [navigate]);\n  const onMZText3Click = useCallback(() => {\n    navigate(\"/2\");\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.div,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.child\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.regisButton,\n      onClick: onRegisButtonContainerClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.regisButtonChild\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.mz,\n        children: \"MZ \\uC2E0\\uC870\\uC5B4 \\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.frameParent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.parent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.div1,\n          children: \"\\uB2E8\\uC5B4\\uC758 \\uC720\\uB798\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.groupWrapper,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.wrapper,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.div2,\n              children: wordData && wordData.map((word, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles.p,\n                children: word[\"영어 단어\"]\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.div3,\n        children: wordData && wordData.map((word, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.p,\n          children: word[\"영어 뜻\"]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Frame111, \"V1NoiP7bvbl1pRmTTjG7uI8j6To=\", false, function () {\n  return [useNavigate];\n});\n_c = Frame111;\nexport default Frame111;\nvar _c;\n$RefreshReg$(_c, \"Frame111\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","styles","XLSX","jsxDEV","_jsxDEV","Frame111","_s","navigate","wordData","setWordData","fetchData","response","fetch","arrayBuffer","data","Uint8Array","workbook","read","type","sheetName","SheetNames","sheet","Sheets","jsonData","utils","sheet_to_json","error","console","onRegisButtonContainerClick","onMZTextClick","onMZText1Click","onMZText3Click","className","div","children","child","fileName","_jsxFileName","lineNumber","columnNumber","regisButton","onClick","regisButtonChild","mz","frameParent","parent","div1","groupWrapper","wrapper","div2","map","word","index","p","div3","_c","$RefreshReg$"],"sources":["/Users/kimminsu/Documents/GitHub/react-code/frontend/src/pages/Frame111.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./Frame111.module.css\";\nimport * as XLSX from \"xlsx\";\n\nconst Frame111 = () => {\n  const navigate = useNavigate();\n  const [wordData, setWordData] = useState(null);\n\n  useEffect(() => {\n    // Load data from Combined_MZ_Words.xlsx\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"Combined_MZ_Words.xlsx\");\n        const arrayBuffer = await response.arrayBuffer();\n        const data = new Uint8Array(arrayBuffer);\n        const workbook = XLSX.read(data, { type: \"array\" });\n\n        // Assuming your data is in the first sheet\n        const sheetName = workbook.SheetNames[0];\n        const sheet = workbook.Sheets[sheetName];\n\n        // Convert the sheet data to JSON\n        const jsonData = XLSX.utils.sheet_to_json(sheet);\n\n        setWordData(jsonData);\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const onRegisButtonContainerClick = useCallback(() => {\n    navigate(\"/8\");\n  }, [navigate]);\n\n  const onMZTextClick = useCallback(() => {\n    navigate(\"/\");\n  }, [navigate]);\n\n  const onMZText1Click = useCallback(() => {\n    navigate(\"/\");\n  }, [navigate]);\n\n  const onMZText3Click = useCallback(() => {\n    navigate(\"/2\");\n  }, [navigate]);\n\n  return (\n    <div className={styles.div}>\n      <div className={styles.child} />\n      <div className={styles.regisButton} onClick={onRegisButtonContainerClick}>\n        <div className={styles.regisButtonChild} />\n        <div className={styles.mz}>MZ 신조어 등록</div>\n      </div>\n      <div className={styles.frameParent}>\n        <div className={styles.parent}>\n          <div className={styles.div1}>단어의 유래</div>\n          <div className={styles.groupWrapper}>\n            <div className={styles.wrapper}>\n              <div className={styles.div2}>\n                {/* Display English words from the data */}\n                {wordData &&\n                  wordData.map((word, index) => (\n                    <p key={index} className={styles.p}>\n                      {word[\"영어 단어\"]}\n                    </p>\n                  ))}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={styles.div3}>\n          {/* Display English meanings from the data */}\n          {wordData &&\n            wordData.map((word, index) => (\n              <p key={index} className={styles.p}>\n                {word[\"영어 뜻\"]}\n              </p>\n            ))}\n        </div>\n      </div>\n      {/* ... (continue with the rest of your JSX) */}\n    </div>\n  );\n};\n\nexport default Frame111;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}