{"ast":null,"code":"var _jsxFileName = \"/Users/kimminsu/Documents/GitHub/react-code/frontend/src/pages/Frame111.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./Frame111.module.css\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Frame111 = () => {\n  _s();\n  const navigate = useNavigate();\n  const [wordData, setWordData] = useState([]);\n  const [visibleData, setVisibleData] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const pageSize = 1; // Number of items to load per page\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"/Modified_MZ_Words.xlsx\");\n        const arrayBuffer = await response.arrayBuffer();\n        const data = new Uint8Array(arrayBuffer);\n        const workbook = XLSX.read(data, {\n          type: \"array\"\n        });\n        const sheetName = workbook.SheetNames[0];\n        const sheet = workbook.Sheets[sheetName];\n        const jsonData = XLSX.utils.sheet_to_json(sheet, {\n          header: 1\n        });\n        const columnNames = jsonData[0];\n        jsonData.shift();\n        const transformedData = jsonData.map(row => {\n          const wordObject = {};\n          columnNames.forEach((column, index) => {\n            wordObject[column] = row[index];\n          });\n          return wordObject;\n        });\n        setWordData(transformedData);\n        updateVisibleData(pageNumber, pageSize);\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n      }\n    };\n    fetchData();\n  }, [pageNumber]);\n  const updateVisibleData = (page, size) => {\n    const startIndex = (page - 1) * size;\n    const endIndex = startIndex + size;\n    const newData = wordData.slice(startIndex, endIndex);\n    setVisibleData(prevData => [...prevData, ...newData]);\n  };\n  const handleScroll = () => {\n    const container = containerRef.current;\n    if (container && container.scrollTop + container.clientHeight >= container.scrollHeight) {\n      setPageNumber(prevPage => prevPage + 1);\n    }\n  };\n  useEffect(() => {\n    updateVisibleData(pageNumber, pageSize);\n  }, [wordData, pageNumber, pageSize]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.div,\n    ref: containerRef,\n    onScroll: handleScroll,\n    style: {\n      overflowY: \"scroll\",\n      height: \"500px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inner,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.div4,\n          children: visibleData.map((word, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.p,\n            children: [word[\"한글 단어\"], \" - \", word[\"영어 단어\"], \" - \", word[\"한글 뜻\"], \" -\", \" \", word[\"영어 뜻\"]]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Frame111, \"hKzftMOtmH6tEINH0PLxO6D6Kjs=\", false, function () {\n  return [useNavigate];\n});\n_c = Frame111;\nexport default Frame111;\nvar _c;\n$RefreshReg$(_c, \"Frame111\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","styles","XLSX","jsxDEV","_jsxDEV","Frame111","_s","navigate","wordData","setWordData","visibleData","setVisibleData","pageNumber","setPageNumber","pageSize","containerRef","fetchData","response","fetch","arrayBuffer","data","Uint8Array","workbook","read","type","sheetName","SheetNames","sheet","Sheets","jsonData","utils","sheet_to_json","header","columnNames","shift","transformedData","map","row","wordObject","forEach","column","index","updateVisibleData","error","console","page","size","startIndex","endIndex","newData","slice","prevData","handleScroll","container","current","scrollTop","clientHeight","scrollHeight","prevPage","className","div","ref","onScroll","style","overflowY","height","children","inner","div4","word","p","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kimminsu/Documents/GitHub/react-code/frontend/src/pages/Frame111.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./Frame111.module.css\";\nimport * as XLSX from \"xlsx\";\n\nconst Frame111 = () => {\n  const navigate = useNavigate();\n  const [wordData, setWordData] = useState([]);\n  const [visibleData, setVisibleData] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const pageSize = 1; // Number of items to load per page\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"/Modified_MZ_Words.xlsx\");\n        const arrayBuffer = await response.arrayBuffer();\n        const data = new Uint8Array(arrayBuffer);\n        const workbook = XLSX.read(data, { type: \"array\" });\n\n        const sheetName = workbook.SheetNames[0];\n        const sheet = workbook.Sheets[sheetName];\n\n        const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n\n        const columnNames = jsonData[0];\n        jsonData.shift();\n\n        const transformedData = jsonData.map((row) => {\n          const wordObject = {};\n          columnNames.forEach((column, index) => {\n            wordObject[column] = row[index];\n          });\n          return wordObject;\n        });\n\n        setWordData(transformedData);\n        updateVisibleData(pageNumber, pageSize);\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n      }\n    };\n\n    fetchData();\n  }, [pageNumber]);\n\n  const updateVisibleData = (page, size) => {\n    const startIndex = (page - 1) * size;\n    const endIndex = startIndex + size;\n    const newData = wordData.slice(startIndex, endIndex);\n    setVisibleData((prevData) => [...prevData, ...newData]);\n  };\n\n  const handleScroll = () => {\n    const container = containerRef.current;\n    if (\n      container &&\n      container.scrollTop + container.clientHeight >= container.scrollHeight\n    ) {\n      setPageNumber((prevPage) => prevPage + 1);\n    }\n  };\n\n  useEffect(() => {\n    updateVisibleData(pageNumber, pageSize);\n  }, [wordData, pageNumber, pageSize]);\n\n  return (\n    <div\n      className={styles.div}\n      ref={containerRef}\n      onScroll={handleScroll}\n      style={{ overflowY: \"scroll\", height: \"500px\" }}\n    >\n      <div className={styles.inner}>\n        <div className={styles.container}>\n          <div className={styles.div4}>\n            {visibleData.map((word, index) => (\n              <p key={index} className={styles.p}>\n                {word[\"한글 단어\"]} - {word[\"영어 단어\"]} - {word[\"한글 뜻\"]} -{\" \"}\n                {word[\"영어 뜻\"]}\n              </p>\n            ))}\n          </div>\n        </div>\n      </div>\n      {/* ... (existing JSX) */}\n    </div>\n  );\n};\n\nexport default Frame111;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAMiB,QAAQ,GAAG,CAAC,CAAC,CAAC;EACpB,MAAMC,YAAY,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACd,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyB,CAAC;QACvD,MAAMC,WAAW,GAAG,MAAMF,QAAQ,CAACE,WAAW,CAAC,CAAC;QAChD,MAAMC,IAAI,GAAG,IAAIC,UAAU,CAACF,WAAW,CAAC;QACxC,MAAMG,QAAQ,GAAGpB,IAAI,CAACqB,IAAI,CAACH,IAAI,EAAE;UAAEI,IAAI,EAAE;QAAQ,CAAC,CAAC;QAEnD,MAAMC,SAAS,GAAGH,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC;QACxC,MAAMC,KAAK,GAAGL,QAAQ,CAACM,MAAM,CAACH,SAAS,CAAC;QAExC,MAAMI,QAAQ,GAAG3B,IAAI,CAAC4B,KAAK,CAACC,aAAa,CAACJ,KAAK,EAAE;UAAEK,MAAM,EAAE;QAAE,CAAC,CAAC;QAE/D,MAAMC,WAAW,GAAGJ,QAAQ,CAAC,CAAC,CAAC;QAC/BA,QAAQ,CAACK,KAAK,CAAC,CAAC;QAEhB,MAAMC,eAAe,GAAGN,QAAQ,CAACO,GAAG,CAAEC,GAAG,IAAK;UAC5C,MAAMC,UAAU,GAAG,CAAC,CAAC;UACrBL,WAAW,CAACM,OAAO,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;YACrCH,UAAU,CAACE,MAAM,CAAC,GAAGH,GAAG,CAACI,KAAK,CAAC;UACjC,CAAC,CAAC;UACF,OAAOH,UAAU;QACnB,CAAC,CAAC;QAEF7B,WAAW,CAAC0B,eAAe,CAAC;QAC5BO,iBAAiB,CAAC9B,UAAU,EAAEE,QAAQ,CAAC;MACzC,CAAC,CAAC,OAAO6B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC;IAED3B,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAEhB,MAAM8B,iBAAiB,GAAGA,CAACG,IAAI,EAAEC,IAAI,KAAK;IACxC,MAAMC,UAAU,GAAG,CAACF,IAAI,GAAG,CAAC,IAAIC,IAAI;IACpC,MAAME,QAAQ,GAAGD,UAAU,GAAGD,IAAI;IAClC,MAAMG,OAAO,GAAGzC,QAAQ,CAAC0C,KAAK,CAACH,UAAU,EAAEC,QAAQ,CAAC;IACpDrC,cAAc,CAAEwC,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE,GAAGF,OAAO,CAAC,CAAC;EACzD,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,SAAS,GAAGtC,YAAY,CAACuC,OAAO;IACtC,IACED,SAAS,IACTA,SAAS,CAACE,SAAS,GAAGF,SAAS,CAACG,YAAY,IAAIH,SAAS,CAACI,YAAY,EACtE;MACA5C,aAAa,CAAE6C,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;IAC3C;EACF,CAAC;EAED5D,SAAS,CAAC,MAAM;IACd4C,iBAAiB,CAAC9B,UAAU,EAAEE,QAAQ,CAAC;EACzC,CAAC,EAAE,CAACN,QAAQ,EAAEI,UAAU,EAAEE,QAAQ,CAAC,CAAC;EAEpC,oBACEV,OAAA;IACEuD,SAAS,EAAE1D,MAAM,CAAC2D,GAAI;IACtBC,GAAG,EAAE9C,YAAa;IAClB+C,QAAQ,EAAEV,YAAa;IACvBW,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAEhD9D,OAAA;MAAKuD,SAAS,EAAE1D,MAAM,CAACkE,KAAM;MAAAD,QAAA,eAC3B9D,OAAA;QAAKuD,SAAS,EAAE1D,MAAM,CAACoD,SAAU;QAAAa,QAAA,eAC/B9D,OAAA;UAAKuD,SAAS,EAAE1D,MAAM,CAACmE,IAAK;UAAAF,QAAA,EACzBxD,WAAW,CAAC0B,GAAG,CAAC,CAACiC,IAAI,EAAE5B,KAAK,kBAC3BrC,OAAA;YAAeuD,SAAS,EAAE1D,MAAM,CAACqE,CAAE;YAAAJ,QAAA,GAChCG,IAAI,CAAC,OAAO,CAAC,EAAC,KAAG,EAACA,IAAI,CAAC,OAAO,CAAC,EAAC,KAAG,EAACA,IAAI,CAAC,MAAM,CAAC,EAAC,IAAE,EAAC,GAAG,EACvDA,IAAI,CAAC,MAAM,CAAC;UAAA,GAFP5B,KAAK;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGV,CACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAACpE,EAAA,CArFID,QAAQ;EAAA,QACKL,WAAW;AAAA;AAAA2E,EAAA,GADxBtE,QAAQ;AAuFd,eAAeA,QAAQ;AAAC,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}