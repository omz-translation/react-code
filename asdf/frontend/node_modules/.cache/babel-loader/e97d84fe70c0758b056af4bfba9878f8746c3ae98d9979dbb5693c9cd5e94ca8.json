{"ast":null,"code":"var _jsxFileName = \"/Users/kimminsu/Documents/GitHub/react-code/frontend/src/pages/Frame111.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./Frame111.module.css\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEMS_PER_PAGE = 1;\nconst Frame111 = () => {\n  _s();\n  const navigate = useNavigate();\n  const onRegisButtonContainerClick = useCallback(() => {\n    navigate(\"/8\");\n  }, [navigate]);\n  const onMZTextClick = useCallback(() => {\n    navigate(\"/20\");\n  }, [navigate]);\n  const onMZText1Click = useCallback(() => {\n    navigate(\"/20\");\n  }, [navigate]);\n  const onMZText3Click = useCallback(() => {\n    navigate(\"/2\");\n  }, [navigate]);\n  const [wordData, setWordData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"/Modified_MZ_Words.xlsx\");\n        const arrayBuffer = await response.arrayBuffer();\n        const data = new Uint8Array(arrayBuffer);\n        const workbook = XLSX.read(data, {\n          type: \"array\"\n        });\n        const sheetName = workbook.SheetNames[0];\n        const sheet = workbook.Sheets[sheetName];\n        const jsonData = XLSX.utils.sheet_to_json(sheet, {\n          header: 1\n        });\n        const columnNames = jsonData[0];\n        jsonData.shift();\n        const transformedData = jsonData.map(row => {\n          const wordObject = {};\n          columnNames.forEach((column, index) => {\n            wordObject[column] = row[index];\n          });\n          return wordObject;\n        });\n        setWordData(transformedData);\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const onPageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n  const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\n  const endIndex = startIndex + ITEMS_PER_PAGE;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.div,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.child\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.regisButton,\n      onClick: onRegisButtonContainerClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.regisButtonChild\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.mz,\n        children: \"MZ \\uC2E0\\uC870\\uC5B4 \\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.frameParent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.parent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.div1,\n          children: \"\\uB2E8\\uC5B4\\uC758 \\uC720\\uB798\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.groupWrapper,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.wrapper,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.div2,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles.p,\n                children: `영어 뜻`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inner,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.container,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.div4,\n            children: wordData.slice(startIndex, endIndex).map((word, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles.p,\n                children: word[\"한글 단어\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles.p,\n                children: word[\"영어 단어\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles.p,\n                children: word[\"한글 뜻\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles.p,\n                children: word[\"영어 뜻\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: currentPage === 1,\n          onClick: () => onPageChange(currentPage - 1),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: `Page ${currentPage}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: endIndex >= wordData.length,\n          onClick: () => onPageChange(currentPage + 1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Frame111, \"+IiO1clMKYhRnixk55q7OwZcOUI=\", false, function () {\n  return [useNavigate];\n});\n_c = Frame111;\nexport default Frame111;\nvar _c;\n$RefreshReg$(_c, \"Frame111\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","styles","XLSX","jsxDEV","_jsxDEV","ITEMS_PER_PAGE","Frame111","_s","navigate","onRegisButtonContainerClick","useCallback","onMZTextClick","onMZText1Click","onMZText3Click","wordData","setWordData","currentPage","setCurrentPage","fetchData","response","fetch","arrayBuffer","data","Uint8Array","workbook","read","type","sheetName","SheetNames","sheet","Sheets","jsonData","utils","sheet_to_json","header","columnNames","shift","transformedData","map","row","wordObject","forEach","column","index","error","console","onPageChange","newPage","startIndex","endIndex","className","div","children","child","fileName","_jsxFileName","lineNumber","columnNumber","regisButton","onClick","regisButtonChild","mz","frameParent","parent","div1","groupWrapper","wrapper","div2","p","inner","container","div4","slice","word","Fragment","disabled","length","_c","$RefreshReg$"],"sources":["/Users/kimminsu/Documents/GitHub/react-code/frontend/src/pages/Frame111.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./Frame111.module.css\";\nimport * as XLSX from \"xlsx\";\n\nconst ITEMS_PER_PAGE = 1;\n\nconst Frame111 = () => {\n  const navigate = useNavigate();\n\n  const onRegisButtonContainerClick = useCallback(() => {\n    navigate(\"/8\");\n  }, [navigate]);\n\n  const onMZTextClick = useCallback(() => {\n    navigate(\"/20\");\n  }, [navigate]);\n\n  const onMZText1Click = useCallback(() => {\n    navigate(\"/20\");\n  }, [navigate]);\n\n  const onMZText3Click = useCallback(() => {\n    navigate(\"/2\");\n  }, [navigate]);\n\n  const [wordData, setWordData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"/Modified_MZ_Words.xlsx\");\n\n        const arrayBuffer = await response.arrayBuffer();\n        const data = new Uint8Array(arrayBuffer);\n        const workbook = XLSX.read(data, { type: \"array\" });\n\n        const sheetName = workbook.SheetNames[0];\n        const sheet = workbook.Sheets[sheetName];\n\n        const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n\n        const columnNames = jsonData[0];\n        jsonData.shift();\n\n        const transformedData = jsonData.map((row) => {\n          const wordObject = {};\n          columnNames.forEach((column, index) => {\n            wordObject[column] = row[index];\n          });\n          return wordObject;\n        });\n\n        setWordData(transformedData);\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const onPageChange = (newPage) => {\n    setCurrentPage(newPage);\n  };\n\n  const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\n  const endIndex = startIndex + ITEMS_PER_PAGE;\n\n  return (\n    <div className={styles.div}>\n      <div className={styles.child} />\n      <div className={styles.regisButton} onClick={onRegisButtonContainerClick}>\n        <div className={styles.regisButtonChild} />\n        <div className={styles.mz}>MZ 신조어 등록</div>\n      </div>\n      <div className={styles.frameParent}>\n        <div className={styles.parent}>\n          <div className={styles.div1}>단어의 유래</div>\n          <div className={styles.groupWrapper}>\n            <div className={styles.wrapper}>\n              <div className={styles.div2}>\n                <p className={styles.p}>{`영어 뜻`}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={styles.inner}>\n          <div className={styles.container}>\n            <div className={styles.div4}>\n              {/* Display the current set of 10 items */}\n              {wordData.slice(startIndex, endIndex).map((word, index) => (\n                <React.Fragment key={index}>\n                  <p className={styles.p}>{word[\"한글 단어\"]}</p>\n                  <p className={styles.p}>{word[\"영어 단어\"]}</p>\n                  <p className={styles.p}>{word[\"한글 뜻\"]}</p>\n                  <p className={styles.p}>{word[\"영어 뜻\"]}</p>\n                </React.Fragment>\n              ))}\n            </div>\n          </div>\n        </div>\n        {/* ... (existing JSX) */}\n        <div>\n          {/* Pagination controls */}\n          <button\n            disabled={currentPage === 1}\n            onClick={() => onPageChange(currentPage - 1)}\n          >\n            Previous\n          </button>\n          <span>{`Page ${currentPage}`}</span>\n          <button\n            disabled={endIndex >= wordData.length}\n            onClick={() => onPageChange(currentPage + 1)}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Frame111;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}