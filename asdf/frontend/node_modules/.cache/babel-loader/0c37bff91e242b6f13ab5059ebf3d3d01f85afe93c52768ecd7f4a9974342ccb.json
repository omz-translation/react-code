{"ast":null,"code":"var _jsxFileName = \"/Users/kimminsu/Documents/GitHub/react-code/frontend/src/pages/Frame111.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./Frame111.module.css\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Frame111 = () => {\n  _s();\n  const navigate = useNavigate();\n  const [wordData, setWordData] = useState([]);\n  const [currentRow, setCurrentRow] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"Combined_MZ_Words.xlsx\");\n        const arrayBuffer = await response.arrayBuffer();\n        const data = new Uint8Array(arrayBuffer);\n        const workbook = XLSX.read(data, {\n          type: \"array\"\n        });\n        const sheetName = workbook.SheetNames[0];\n        const sheet = workbook.Sheets[sheetName];\n        const jsonData = XLSX.utils.sheet_to_json(sheet, {\n          header: 1\n        });\n\n        // Assuming the first row contains column headers\n        const columnNames = jsonData[0];\n        jsonData.shift(); // Remove the first row (column headers)\n\n        const transformedData = jsonData.map(row => {\n          const wordObject = {};\n          columnNames.forEach((column, index) => {\n            wordObject[column] = row[index];\n          });\n          return wordObject;\n        });\n        setWordData(transformedData);\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const onRegisButtonContainerClick = () => {\n    navigate(\"/8\");\n  };\n  const onMZTextClick = () => {\n    navigate(\"/\");\n  };\n  const onMZText1Click = () => {\n    navigate(\"/\");\n  };\n  const onMZText3Click = () => {\n    navigate(\"/2\");\n  };\n  const handleNextRowClick = useCallback(() => {\n    if (currentRow < wordData.length - 1) {\n      setCurrentRow(prevRow => prevRow + 1);\n    } else {\n      // You can handle reaching the end of the rows here.\n      console.log(\"End of rows reached\");\n    }\n  }, [currentRow, wordData]);\n\n  // Rest of your code...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.div,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inner,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.div4,\n          children: wordData.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.p,\n              children: wordData[0][\"한글 단어\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.p,\n              children: wordData[0][\"영어 단어\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.p,\n              children: wordData[0][\"한글 뜻\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.p,\n              children: wordData[0][\"영어 뜻\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Frame111, \"eCU3Ny4EJYWdjcAZOMwspwEx8Mc=\", false, function () {\n  return [useNavigate];\n});\n_c = Frame111;\nexport default Frame111;\nvar _c;\n$RefreshReg$(_c, \"Frame111\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","styles","XLSX","jsxDEV","_jsxDEV","Fragment","_Fragment","Frame111","_s","navigate","wordData","setWordData","currentRow","setCurrentRow","fetchData","response","fetch","arrayBuffer","data","Uint8Array","workbook","read","type","sheetName","SheetNames","sheet","Sheets","jsonData","utils","sheet_to_json","header","columnNames","shift","transformedData","map","row","wordObject","forEach","column","index","error","console","onRegisButtonContainerClick","onMZTextClick","onMZText1Click","onMZText3Click","handleNextRowClick","length","prevRow","log","className","div","children","inner","container","div4","p","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kimminsu/Documents/GitHub/react-code/frontend/src/pages/Frame111.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./Frame111.module.css\";\nimport * as XLSX from \"xlsx\";\n\nconst Frame111 = () => {\n  const navigate = useNavigate();\n  const [wordData, setWordData] = useState([]);\n  const [currentRow, setCurrentRow] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"Combined_MZ_Words.xlsx\");\n        const arrayBuffer = await response.arrayBuffer();\n        const data = new Uint8Array(arrayBuffer);\n        const workbook = XLSX.read(data, { type: \"array\" });\n\n        const sheetName = workbook.SheetNames[0];\n        const sheet = workbook.Sheets[sheetName];\n\n        const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n\n        // Assuming the first row contains column headers\n        const columnNames = jsonData[0];\n\n        jsonData.shift(); // Remove the first row (column headers)\n\n        const transformedData = jsonData.map((row) => {\n          const wordObject = {};\n          columnNames.forEach((column, index) => {\n            wordObject[column] = row[index];\n          });\n          return wordObject;\n        });\n\n        setWordData(transformedData);\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  const onRegisButtonContainerClick = () => {\n    navigate(\"/8\");\n  };\n\n  const onMZTextClick = () => {\n    navigate(\"/\");\n  };\n\n  const onMZText1Click = () => {\n    navigate(\"/\");\n  };\n\n  const onMZText3Click = () => {\n    navigate(\"/2\");\n  };\n\n  const handleNextRowClick = useCallback(() => {\n    if (currentRow < wordData.length - 1) {\n      setCurrentRow((prevRow) => prevRow + 1);\n    } else {\n      // You can handle reaching the end of the rows here.\n      console.log(\"End of rows reached\");\n    }\n  }, [currentRow, wordData]);\n\n  // Rest of your code...\n\n  return (\n    <div className={styles.div}>\n      <div className={styles.inner}>\n        <div className={styles.container}>\n          <div className={styles.div4}>\n            {/* Check if wordData is not empty before accessing properties */}\n            {wordData.length > 0 && (\n              <>\n                <p className={styles.p}>{wordData[0][\"한글 단어\"]}</p>\n                <p className={styles.p}>{wordData[0][\"영어 단어\"]}</p>\n                <p className={styles.p}>{wordData[0][\"한글 뜻\"]}</p>\n                <p className={styles.p}>{wordData[0][\"영어 뜻\"]}</p>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n      {/* ... (existing JSX) */}\n    </div>\n  );\n};\n\n\nexport default Frame111;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}